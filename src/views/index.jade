//- index.jade
extends ./layout.jade

block content
  div.container-fluid(ng-controller='StatsCtrl')
    //- top row
    div.row(ng-cloak)
      div.col-xs-3
        div.row(ng-cloak)
          div.col-xs-12.stat-holder
            div.big-info.bestblock.text-info
              div.pull-left.icon-full-width
                i.icon-block
              div.big-details-holder
                span.small-title best block
                span.big-details {{'#'}}{{ bestBlock | number}}
              div.clearfix
        div.row(ng-cloak)
          div.col-xs-12.stat-holder.xpull-right
            div.big-info.chart.xdouble-chart(class="{{ blockPropagationAvg | propagationAvgTimeClass : true }}")
              i.icon-gas
              span.small-title block propagation
              histogram.big-details.d3-blockpropagation(data="blockPropagationChart")
              div.clearfix
      div.col-xs-6.stat-holder.map-holder
        //- div.col-xs-12
        nodemap#mapHolder(data="map")
      div.col-xs-3
        div.row(ng-cloak)
          div.col-xs-12.stat-holder
            div.big-info.active-nodes(class="{{ nodesActive | nodesActiveClass : nodesTotal }}")
              div.pull-left.icon-full-width
                i.icon-node
              div.big-details-holder
                span.small-title active nodes
                span.big-details {{nodesActive}}/{{nodesTotal}}
              div.clearfix
        div.row(ng-cloak)
          div.col-xs-12.stat-holder
            div.big-info.chart.text-info
              i.icon-mining
              span.small-title block weight
              sparkchart.big-details.spark-difficulty(data="{{difficultyChart.join(',')}}")
              div.clearfix
    //- second rows
    div.row(ng-cloak)
      div.col-xs-3
        div.row(ng-cloak)
          div.col-xs-12.stat-holder
            div.big-info.chart(class="{{ avgBlockTime | avgTimeClass }}")
              i.icon-time
              span.small-title block time
              sparkchart.big-details.spark-blocktimes(data="{{lastBlocksTime.join(',')}}", tooltipsuffix="s")
              div.clearfix
      div.col-xs-3
        div.row(ng-cloak)
          div.col-xs-12.stat-holder
            div.big-info.chart.text-info
              i.icon-uncle
              span.small-title transactions
              sparkchart.big-details.spark-transactions(data="{{transactionDensity.join(',')}}")
              div.clearfix
        //- div.row(ng-cloak)
        //-   div.col-xs-12.stat-holder
        //-     div.big-info.chart.text-info
        //-       i.icon-difficulty
        //-       span.small-title gas limit
        //-       sparkchart.big-details.spark-difficulty(data="{{lastGasLimit.join(',')}}")
        //-       div.clearfix
      div.col-xs-3
        div.row(ng-cloak)
          div.col-xs-12.stat-holder
            div.big-info.chart.text-info
              i.icon-gasprice
              span.small-title gas spending
              sparkchart.big-details.spark-gasspending(data="{{gasSpending.join(',')}}")
              div.clearfix
      div.col-xs-3
        div.row(ng-cloak)
          div.col-xs-12.stat-holder
            div.big-info.chart.text-info
              i.icon-difficulty
              span.small-title gas limit
              sparkchart.big-details.spark-difficulty(data="{{lastGasLimit.join(',')}}")
              div.clearfix

    div.row(ng-cloak, style="padding-top: 10px")
      table.table.table-striped
        thead
          tr.text-info
            th.th-nodecheck
              i.icon-check-o(data-toggle="tooltip", data-placement="top", title="Sort by active status", ng-click="orderTable(['stats.active'], false)")
            th
              i.icon-mining(data-toggle="tooltip", data-placement="top", title="Is staking", ng-click="orderTable(['-stats.mining'], false)")
            th.th-nodename(style="min-width: 150px")
              i.icon-node(data-toggle="tooltip", data-placement="top", title="Node name", ng-click="orderTable(['info.name'], false)")
              input.small(type="search" ng-model="name_filter" size=10 placeholder="filter nodes..." aria-label="filter nodes" style="background:none; border: solid 1px gray; padding: 0px 2px;")
            th.th-nodetype
              i.icon-laptop(data-toggle="tooltip", data-placement="top", title="Node type", ng-click="orderTable(['info.node'], false)")
              input.small(ng-model="limit" ng-change="goToPage(1)" size=3 placeholder="20" aria-label="limit" style="background:none; border: solid 1px gray; padding: 0px 2px; text-align: right;")
              span.small /{{results.length}} nodes
            th.th-latency
              i.icon-clock(data-toggle="tooltip", data-placement="top", title="Node latency", ng-click="orderTable(['stats.latency'], false)")
            th
              i.icon-group(data-toggle="tooltip", data-placement="top", title="Peers", ng-click="orderTable(['-stats.peers'], false)")
            th
              i.icon-network(data-toggle="tooltip", data-placement="top", title="Pending transactions", ng-click="orderTable(['-stats.pending'], false)")
            th
              i.icon-block(data-toggle="tooltip", data-placement="top", title="Last block", ng-click="orderTable(['-stats.block.number', 'stats.block.propagation'], false)")
            th.th-blockhash &nbsp;
            th.th-blockhash
              i.icon-difficulty(data-toggle="tooltip", data-placement="top", title="Total weight", ng-click="orderTable(['-stats.block.totalDifficulty'], false)")
            th.th-blocktime
              i.icon-time(data-toggle="tooltip", data-placement="top", title="Last block time", ng-click="orderTable(['-stats.block.received'], false)")
            th.th-peerPropagationTime
              i.icon-gas(data-toggle="tooltip", data-placement="top", title="Propagation time", ng-click="orderTable(['-stats.block.number', 'stats.block.propagation'], false)")
            th.th-peerPropagationChart
            th.th-peerPropagationAvg
              i.icon-gas(data-toggle="tooltip", data-placement="top", title="Average propagation time", ng-click="orderTable(['stats.propagationAvg'], false)")
        tbody(ng-cloak)
          tr(ng-repeat='node in (results = (nodes | filter:{id:name_filter} | orderBy:predicate)) | limitTo:limit:pageBegin track by node.id', class="{{ node.stats | mainClass : bestBlock }}", id="node_{{node.id}}")
            td.td-nodecheck
              i(ng-click="pinNode(node.id)", class="{{ node.pinned | nodePinClass }}", data-toggle="tooltip", data-placement="right", data-original-title="Click to {{ node.pinned ? 'un' : '' }}pin")
            td(class="{{ node.stats.mining | hashrateClass : node.stats.active }}", ng-bind-html="node.stats.hashrate | stakingFilter : node.stats.mining")
            td.nodeInfo(rel="{{node.id}}")
              span.small(data-toggle="tooltip", data-placement="top", data-html="true", data-original-title="{{node | geoTooltip}}") {{node.info.name}}
              //- span.small &nbsp;({{node.info.ip}})
              a.small(href="https://github.com/ethereum/wiki/wiki/Network-Status#updating", target="_blank", data-toggle="tooltip", data-placement="top", data-html="true", data-original-title="Netstats client needs update.<br>Click this icon for instructions.", class="{{ node.info | nodeClientClass : currentApiVersion }}")
                i.icon-warning-o
            td
              div.small(ng-bind-html="node.info.node | nodeVersion")
            td(class="{{ node.readable.latencyClass }}")
              span.small {{ node.readable.latency }}
            td(class="{{ node.stats.peers | peerClass : node.stats.active }}", style="padding-left: 11px;") {{node.stats.peers}}
            td(style="padding-left: 15px;") {{node.stats.pending}}
            td(class="{{ node.stats | blockClass : bestBlock }}")
              span(class="{{ node.readable.forkMessage ? node.readable.forkClass : '' }}") {{'#'}}{{ node.stats.block.number | number }}
              //- a.small(data-toggle="tooltip", data-placement="top", data-html="true", data-original-title="{{ node.readable.forkMessage }}", class="{{ node.readable.forkClass }}")
                i.icon-warning-o
            td(class="{{ node.stats | blockClass : bestBlock }}")
              span.small {{node.stats.block.hash | hashFilter}}
            td(class="{{ node.stats | blockClass : bestBlock }}")
              span.small {{node.stats.block.totalDifficulty | number}}
            td(class="{{ node.stats.block.received | timeClass : node.stats.active }}") {{node.stats.block.received | blockTimeFilter }}
            td(class="{{ node.stats | propagationTimeClass : bestBlock }}")
              div.propagationBox
              span {{node.stats.block.propagation | blockPropagationFilter}}
            td.peerPropagationChart(class="{{node.id}}")
              nodepropagchart(data="{{node.history.join(',')}}")
            td(class="{{ node.stats | propagationNodeAvgTimeClass : bestBlock }}") {{ node.stats | blockPropagationAvgFilter : bestBlock }}
    div.row(ng-cloak)
      center
        ul.pagination.right()
          li {{"Page: "}}
          // if current page is > 10, have -10 back btn
          li.arrow(ng-if="currentPage > 10")
            a(ng-click='goToPage(currentPage - 10)') ««
          // have previous & nect page as clicable option
          li(ng-repeat='n in [-4, -3, -2, -1, 0, 1, 2, 3, 4]' ng-class="{current: currentPage == currentPage + n}")
            a(ng-if="currentPage + n > 0 && (currentPage + n) < (results.length / limit)",ng-click='goToPage(currentPage + n)') {{currentPage + n}}
          // Next btn, if next exists
          li.arrow(ng-if="currentPage < (results.length / limit) + 3 && (currentPage + 3) < (results.length / limit)")
            a(ng-click='goToPage(currentPage + 3)') »
          // if There is more to go, have a +10 btn option
          li.arrow(ng-if="currentPage < (results.length / limit) - 10")
            a(ng-click='goToPage(currentPage + 10)') »»